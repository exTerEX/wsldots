#!/bin/sh

# Let script exit when a command fail
set -o errexit

### Variables
DOTFILES=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
WINDOWS=/mnt/c/Users/$(powershell.exe '$env:UserName' | sed -e 's/\r//g')

### Create directories
mkdir -p $HOME/bin $HOME/.local/bin $HOME/.config/git $HOME/.ssh $HOME/.gpg

### Update
apt update -qq

### Add public keys
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9

### PPA's
if command -v add-apt-repository > /dev/null 2>&1; then
    # python PPA
    sudo add-apt-repository --enable-source --yes ppa:deadsnakes/ppa

    # R PPA
    sudo apt-add-repository --enable-source --yes ppa:marutter/rrutter4.0
    sudo apt-add-repository --enable-source --yes ppa:c2d4u.team/c2d4u4.0+

    # Golang
    sudo apt-add-repository --enable-source --yes ppa:longsleep/golang-backports
else
    echo "add-apt-repository not available"
fi

sudo apt install python3-pip

### Git

# config
ln -sf $DOTFILES/git/.gitconfig $HOME/.gitconfig
chown -h $(whoami):$(whoami) $HOME/.gitconfig

# ignore
ln -sf $DOTFILES/git/.gitignore $HOME/.config/git/.gitignore
chown -h $(whoami):$(whoami) $HOME/.config/git/.gitignore

# attributes
ln -sf $DOTFILES/git/.gitattributes $HOME/.config/git/.gitattributes
chown -h $(whoami):$(whoami) $HOME/.config/git/.gitattributes

# message
ln -sf $DOTFILES/git/.gitmessage $HOME/.config/git/.gitmessage
chown -h $(whoami):$(whoami) $HOME/.config/git/.gitmessage

### SSH

# private
if [ -e $WINDOWS/.ssh/id_rsa ]; then
    cp $WINDOWS/.ssh/id_rsa $HOME/.ssh/id_rsa
    chmod 700 $HOME/.ssh/id_rsa
    chown -h $(whoami):$(whoami) $HOME/.ssh/id_rsa
fi

# public
if [ -e $WINDOWS/.ssh/id_rsa.pub ]; then
    cp $WINDOWS/.ssh/id_rsa.pub $HOME/.ssh/id_rsa.pub
    chmod 700 $HOME/.ssh/id_rsa.pub
    chown -h $(whoami):$(whoami) $HOME/.ssh/id_rsa.pub
fi

# hosts
if [ -e $WINDOWS/.ssh/known_hosts ]; then
    ln -sf $WINDOWS/.ssh/known_hosts $HOME/.ssh/known_hosts
    chown -h $(whoami):$(whoami) $HOME/.ssh/known_hosts
fi

# config
if [ -e $WINDOWS/.ssh/config ]; then
    cp $WINDOWS/.ssh/config $HOME/.ssh/config
    chmod 700 $HOME/.ssh/config
    chown -h $(whoami):$(whoami) $HOME/.ssh/config
fi

### GPG

# private
if [ -e $WINDOWS/.gpg/private_keys.gpg ]; then
    cp $WINDOWS/.gpg/private_keys.gpg $HOME/.gpg/private_keys.gpg
    chmod 700 $HOME/.gpg/private_keys.gpg
    chown -h $(whoami):$(whoami) $HOME/.gpg/private_keys.gpg
fi

# public
if [ -e $WINDOWS/.gpg/public_keys.gpg ]; then
    cp $WINDOWS/.gpg/public_keys.gpg $HOME/.gpg/public_keys.gpg
    chmod 700 $HOME/.gpg/public_keys.gpg
    chown -h $(whoami):$(whoami) $HOME/.gpg/public_keys.gpg
fi

gpg --import $HOME/.gpg/private_keys.gpg

ln -sf $DOTFILES/gpg/gpg-agent.conf $HOME/.gnupg/gpg-agent.conf
chown -h $(whoami):$(whoami) $HOME/.gnupg/gpg-agent.conf

### Tmux
ln -sf $DOTFILES/tmux/.tmux.conf $HOME/.tmux.conf
chown -h $(whoami):$(whoami) $HOME/.tmux.conf

### Vim
ln -sf $DOTFILES/vim/.vimrc $HOME/.vimrc
chown -h $(whoami):$(whoami) $HOME/.vimrc

### Wget
ln -sf $DOTFILES/wget/.wgetrc $HOME/.wgetrc
chown -h $(whoami):$(whoami) $HOME/.wgetrc

### Curl
ln -sf $DOTFILES/curl/.curlrc $HOME/.curlrc
chown -h $(whoami):$(whoami) $HOME/.curlrc

### Conda
ln -sf $DOTFILES/conda/.condarc $HOME/.condarc
chown -h $(whoami):$(whoami) $HOME/.condarc

### Custom
ln -sf $DOTFILES/custom $HOME/.custom
chown -h $(whoami):$(whoami) $HOME/.custom

### VSCode
code --install-extension ms-vscode.cpptools
code --install-extension ms-vscode.cmake-tools
code --install-extension docsmsft.docs-markdown
code --install-extension tamasfe.even-better-toml
code --install-extension grapecity.gc-excelviewer
code --install-extension golang.go
code --install-extension ms-toolsai.jupyter
code --install-extension james-yu.latex-workshop
code --install-extension esbenp.prettier-vscode
code --install-extension ms-python.python
code --install-extension ms-python.vscode-pylance
code --install-extension mechatroner.rainbow-csv

ln -sf $DOTFILES/vscode/settings.json $HOME/.vscode-server/data/Machine/settings.json

### Zsh
sudo apt -y install --no-install-recommends zsh
sudo chsh -s /usr/bin/zsh $(whoami)

# oh-my-zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# config
if [ -n "$ZSH_VERSION" ]; then
    ln -sf $DOTFILES/zsh/.zshrc $HOME/.zshrc
    chown -h $(whoami):$(whoami) $HOME/.zshrc
fi

### System
ln -sf $DOTFILES/.profile $HOME/.profile
chown -h $(whoami):$(whoami) $HOME/.profile

exec bash; source $HOME/.bashrc
